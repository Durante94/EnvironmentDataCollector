@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="row">
    <div class="col-sm-6 col-md-6 col-lg-3 justify-content-around">
        Carica Dati
        <input id="file-input" type="file" multiple class="mb-1 form-control-file" />
        <button class="btn btn-info">Upload</button>
    </div>
    <div class="col-sm-6 col-md-6 col-lg-3 justify-content-around">
        <button class="btn btn-dark" onclick="search()">Cerca</button>
        <button class="btn btn-dark">Esporta</button>
    </div>
    <div class="col-sm-12 col-md-6 col-lg-6">
        Filtri Ricerca e Esportazione:
        <div id="filters-containers" class="d-flex flex-column">
            <span class="d-flex flex-row justify-content-end mb-1">
                Da:
                <input name="Date_From" class="ml-1" type="date" />
                <!--<input id="from-time" class="ml-1" type="time" />-->
            </span>
            <span class="d-flex flex-row justify-content-end mb-1">
                A:
                <input name="Date_To" class="ml-1" type="date" />
                <!--<input id="to-time" class="ml-1" type="time" />-->
            </span>
            Temperatura:
            <span class="d-flex flex-row justify-content-end mb-1">
                Da:
                <input name="Temp_From" class="ml-1" type="number" />
            </span>
            <span class="d-flex flex-row justify-content-end mb-1">
                A:
                <input name="Temp_To" class="ml-1" type="number" />
            </span>
            Umidit&aacute;:
            <span class="d-flex flex-row justify-content-end mb-1">
                Da:
                <input name="Humid_From" class="ml-1" type="number" />
            </span>
            <span class="d-flex flex-row justify-content-end mb-1">
                A:
                <input name="Humid_To" class="ml-1" type="number" />
            </span>
        </div>
    </div>
    <div id="table-container" class="d-none col-12">
        <table class="table table-responsive">
            <thead>
                <tr>
                    <th>Data</th>
                    <th>Temepratura</th>
                    <th>Umidit&aacute;</th>
                    <th>Position</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        const srvUrl = '@Url.Content("~")/',
            getFilters = () => {
                const filters = {}, inputs = document.getElementById('filters-containers').getElementsByTagName('input');

                document.getElementById('table-container').classList.add('d-none');

                for (let i = 0; i < inputs.length; i++) {
                    if (inputs.item(i).value)
                        filters[inputs.item(i).name] = inputs.item(i).value;
                }

                return filters;
            },
            render = json => {
                const tbody = document.getElementsByTagName('tbody').item(0);

                if (!Array.isArray(json) || json.length == 0) {
                    tbody.innerHTML = "<tr><td colspan='4'>Nessun dato trovato</td></tr>"
                } else {
                    let html = '';
                    json.forEach(obj => {
                        html += `<tr>
                                    <td>${obj.dataRilevazione}</td>
                                    <td>${obj.temperatura}</td>
                                    <td>${obj.umidita}</td>
                                    <td>${obj.position}</td>
                                </tr>`;
                    });

                    tbody.innerHTML = html;
                }
                document.getElementById('table-container').classList.remove('d-none');
            },
            search = () => {
                fetch(srvUrl +
                    'Api?jsonFilters=' +
                    JSON.stringify(getFilters())
                ).then(resp => {
                    if (resp.ok)
                        return resp.json();
                    else
                        throw resp;
                }).catch(error => {
                    alert("Si è verificato un errore");
                    console.error(error);
                }).then(render);
            },
            upload = () => {
                const formData = new FormData(), fileList = document.getElementById('file-input').files;

                for (let i = 0; i < fileList.length; i++) {
                    formData.append("files", fileList[i], fileList[i].name);
                }

                fetch(srvUrl + 'Api', {
                    method: 'POST',
                    body: formData
                }).then(resp => {
                    if (resp.ok)
                        return resp.json();
                    else
                        throw resp.json();
                }).catch(error => {
                    alert("Si è verificato un errore");
                    console.error(error);
                }).then(json => {

                });
            };
    </script>
}